using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

// Définition de la classe Étudiant pour représenter un étudiant.
public class Etudiant
{
    public int IdEtudiant { get; set; }
    public string Prenom { get; set; }
    public string Nom { get; set; }

    // Constructeur pour initialiser un nouvel étudiant avec un ID, prénom et nom.
    public Etudiant(int idEtudiant, string prenom, string nom)
    {
        IdEtudiant = idEtudiant;
        Prenom = prenom;
        Nom = nom;
    }

    // Retourne une chaîne de caractères représentant l'étudiant.
    public override string ToString()
    {
        return $"ID: {IdEtudiant}, Prénom: {Prenom}, Nom: {Nom}";
    }
}

// Définition de la classe Cours pour représenter un cours.
public class Cours
{
    public int IdCours { get; set; }
    public string Code { get; set; }
    public string Titre { get; set; }

    // Constructeur pour initialiser un nouveau cours avec un ID, code et titre.
    public Cours(int idCours, string code, string titre)
    {
        IdCours = idCours;
        Code = code;
        Titre = titre;
    }

    // Retourne une chaîne de caractères représentant le cours.
    public override string ToString()
    {
        return $"ID Cours: {IdCours}, Code: {Code}, Titre: {Titre}";
    }
}

// Définition de la classe Note pour représenter une note attribuée à un étudiant.
public class Note
{
    public int IdEtudiant { get; set; }
    public int IdCours { get; set; }
    public double NoteObtenue { get; set; }

    // Constructeur pour initialiser une nouvelle note avec l'ID de l'étudiant, l'ID du cours et la note obtenue.
    public Note(int idEtudiant, int idCours, double noteObtenue)
    {
        IdEtudiant = idEtudiant;
        IdCours = idCours;
        NoteObtenue = noteObtenue;
    }

    // Retourne une chaîne de caractères représentant la note.
    public override string ToString()
    {
        return $"ID Étudiant: {IdEtudiant}, ID Cours: {IdCours}, Note: {NoteObtenue}";
    }
}

// Définition de la classe GestionnaireDeNotes pour gérer les étudiants, les cours et les notes.
public class GestionnaireDeNotes
{
    private List<Etudiant> etudiants = new List<Etudiant>();
    private List<Cours> cours = new List<Cours>();
    private List<Note> notes = new List<Note>();

    // Ajoute un étudiant et crée un fichier correspondant.
    public void AjouterEtudiant(Etudiant etudiant)
    {
        etudiants.Add(etudiant);
        File.WriteAllText($"{etudiant.IdEtudiant}.txt", etudiant.ToString());
    }

    // Ajoute un cours à la liste.
    public void AjouterCours(Cours cours)
    {
        this.cours.Add(cours);
    }

    // Ajoute une note à la liste et met à jour le fichier de l'étudiant.
    public void AjouterNote(Note note)
    {
        notes.Add(note);
        var etudiant = etudiants.FirstOrDefault(e => e.IdEtudiant == note.IdEtudiant);
        if (etudiant != null)
        {
            File.AppendAllText($"{etudiant.IdEtudiant}.txt", $"\n{note.ToString()}");
        }
        else
        {
            Console.WriteLine($"Aucun étudiant trouvé avec l'ID {note.IdEtudiant}.");
        }
    }

    // Obtient et retourne le relevé de notes d'un étudiant.
    public string ObtenirReleveDeNotes(int idEtudiant)
    {
        try
        {
            return File.ReadAllText($"{idEtudiant}.txt");
        }
        catch (FileNotFoundException)
        {
            return "Fichier du relevé de notes introuvable.";
        }
    }
}

// Point d'entrée du programme.
class Programme
{
    static void Main(string[] args)
    {
        // Création du gestionnaire de notes.
        var gestionnaire = new GestionnaireDeNotes();

        // Ajout d'un étudiant et d'un cours de test.
        var etudiant = new Etudiant(1, "Olivier", "Dupont");
        var cours = new Cours(101, "INF101", "Introduction à l'informatique");

        // Enregistrement des données.
        gestionnaire.AjouterEtudiant(etudiant);
        gestionnaire.AjouterCours(cours);
        gestionnaire.AjouterNote(new Note(1, 101, 95.5));

        // Affichage du relevé de notes.
        Console.WriteLine("Relevé de notes pour l'étudiant 1:");
        Console.WriteLine(gestionnaire.ObtenirReleveDeNotes(1));
    }
}
